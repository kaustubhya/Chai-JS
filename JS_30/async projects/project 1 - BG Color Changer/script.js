// In this project, we are given 2 buttons.
// What we need to do is, whenever we click on the start button, the background colors should start changing automatically.
// Whenever we click on stop button, the changing should stop

// Now to solve this, we need to first generate a random hex color and use setInterval() to continously change that color.

// generating a random hex color
const randomColor = function () {
  const hex = '0123456789ABCDEF';
  // hex range 0 to F
  let color = '#';

  for (let i = 0; i < 6; i++) {
    color = color + hex[Math.floor(Math.random() * 16)];

    /*
    hex[Math.floor(Math.random() * 16)]:
    This expression selects a random character from the hex string, using the random integer as an index.
    */ 

    // here for every i iteration i.e. every single digit position, we will generate a random number between 0 to 16 and to make it in integer form, we did wrap it in Math.floor()

    // We did color +=, because we want to use # + 6 numbers generated by random inside the for loop

    // By doing this, we will get our 6 digit hex number and # in its starting place
  }
  return color; // ðŸ›‘
};

// console.log(randomColor()); // ðŸ›‘

// let us now make functions to start and stop bg color change

let intervalId;
const startChangingColor = () => {
  // changing background color, i.e. changing background color of the body
  const changeBgColor = () => {
    document.body.style.backgroundColor = randomColor();
  };

  if (!intervalId) {
    // intervalId !== null

    // now to change it continously, we will use setInterval
    intervalId = setInterval(changeBgColor, 1000);
    // take a look at the syntax, we passed the function as a reference here in setInterval()
  }
};

const stopChangingColor = () => {
  clearInterval(intervalId);

  // now cleaner code principle -> Whenever we are pressing stop and then pressing start again, we are basically overriding the intervalId.

  // So let us flush out the intervalId value after passing the clearInterval(), see below

  intervalId = null;
  // see the safety check in setInterval
};

document.querySelector('#start').addEventListener('click', startChangingColor);

// take a look at the syntax, we passed the function as a reference here in both eventListeners

document.querySelector('#stop').addEventListener('click', stopChangingColor);
